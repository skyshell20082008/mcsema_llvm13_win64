# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: CFG.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\tCFG.proto\x12\x06mcsema\"5\n\x11PreservationRange\x12\x10\n\x08\x62\x65gin_ea\x18\x01 \x02(\x03\x12\x0e\n\x06\x65nd_ea\x18\x02 \x01(\x03\"R\n\x12PreservedRegisters\x12\x11\n\tregisters\x18\x01 \x03(\t\x12)\n\x06ranges\x18\x02 \x03(\x0b\x32\x19.mcsema.PreservationRange\"\xe2\x01\n\rCodeReference\x12\x37\n\x0coperand_type\x18\x01 \x02(\x0e\x32!.mcsema.CodeReference.OperandType\x12\n\n\x02\x65\x61\x18\x02 \x02(\x03\x12\x0c\n\x04mask\x18\x03 \x01(\x03\"~\n\x0bOperandType\x12\x14\n\x10ImmediateOperand\x10\x00\x12\x11\n\rMemoryOperand\x10\x01\x12\x1d\n\x19MemoryDisplacementOperand\x10\x02\x12\x16\n\x12\x43ontrolFlowOperand\x10\x03\x12\x0f\n\x0bOffsetTable\x10\x04\"N\n\x0bInstruction\x12\n\n\x02\x65\x61\x18\x01 \x02(\x03\x12$\n\x05xrefs\x18\x02 \x03(\x0b\x32\x15.mcsema.CodeReference\x12\r\n\x05lp_ea\x18\x03 \x01(\x04\"t\n\x05\x42lock\x12\n\n\x02\x65\x61\x18\x01 \x02(\x03\x12)\n\x0cinstructions\x18\x02 \x03(\x0b\x32\x13.mcsema.Instruction\x12\x15\n\rsuccessor_eas\x18\x03 \x03(\x03\x12\x1d\n\x15is_referenced_by_data\x18\x04 \x02(\x08\"2\n\x0eMemoryLocation\x12\x10\n\x08register\x18\x01 \x02(\t\x12\x0e\n\x06offset\x18\x02 \x01(\x03\"a\n\tValueDecl\x12\x0c\n\x04type\x18\x01 \x02(\t\x12&\n\x06memory\x18\x02 \x01(\x0b\x32\x16.mcsema.MemoryLocation\x12\x10\n\x08register\x18\x03 \x01(\t\x12\x0c\n\x04name\x18\x04 \x01(\t\"\x9c\x02\n\x0c\x46unctionDecl\x12%\n\nparameters\x18\x01 \x03(\x0b\x32\x11.mcsema.ValueDecl\x12(\n\rreturn_values\x18\x02 \x03(\x0b\x32\x11.mcsema.ValueDecl\x12)\n\x0ereturn_address\x18\x03 \x02(\x0b\x32\x11.mcsema.ValueDecl\x12/\n\x14return_stack_pointer\x18\x04 \x02(\x0b\x32\x11.mcsema.ValueDecl\x12\x13\n\x0bis_variadic\x18\x05 \x02(\x08\x12\x13\n\x0bis_noreturn\x18\x06 \x02(\x08\x12\x35\n\x12\x63\x61lling_convention\x18\x07 \x02(\x0e\x32\x19.mcsema.CallingConvention\"\xa8\x01\n\x08\x46unction\x12\n\n\x02\x65\x61\x18\x01 \x02(\x03\x12\x1d\n\x06\x62locks\x18\x02 \x03(\x0b\x32\r.mcsema.Block\x12\x15\n\ris_entrypoint\x18\x03 \x02(\x08\x12\x0c\n\x04name\x18\x04 \x01(\t\x12(\n\x08\x65h_frame\x18\x05 \x03(\x0b\x32\x16.mcsema.ExceptionFrame\x12\"\n\x04\x64\x65\x63l\x18\x06 \x01(\x0b\x32\x14.mcsema.FunctionDecl\"\xa1\x02\n\x10\x45xternalFunction\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\n\n\x02\x65\x61\x18\x02 \x02(\x03\x12\x36\n\x02\x63\x63\x18\x03 \x02(\x0e\x32*.mcsema.ExternalFunction.CallingConvention\x12\x12\n\nhas_return\x18\x04 \x02(\x08\x12\x11\n\tno_return\x18\x05 \x02(\x08\x12\x16\n\x0e\x61rgument_count\x18\x06 \x02(\x05\x12\x0f\n\x07is_weak\x18\x07 \x02(\x08\x12\"\n\x04\x64\x65\x63l\x18\x08 \x01(\x0b\x32\x14.mcsema.FunctionDecl\"G\n\x11\x43\x61llingConvention\x12\x11\n\rCallerCleanup\x10\x00\x12\x11\n\rCalleeCleanup\x10\x01\x12\x0c\n\x08\x46\x61stCall\x10\x02\"d\n\x10\x45xternalVariable\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\n\n\x02\x65\x61\x18\x02 \x02(\x03\x12\x0c\n\x04size\x18\x03 \x02(\x05\x12\x0f\n\x07is_weak\x18\x04 \x02(\x08\x12\x17\n\x0fis_thread_local\x18\x05 \x02(\x08\"\xba\x01\n\rDataReference\x12\n\n\x02\x65\x61\x18\x01 \x02(\x03\x12\r\n\x05width\x18\x02 \x02(\x05\x12\x11\n\ttarget_ea\x18\x03 \x02(\x03\x12@\n\x11target_fixup_kind\x18\x04 \x02(\x0e\x32%.mcsema.DataReference.TargetFixupKind\"9\n\x0fTargetFixupKind\x12\x0c\n\x08\x41\x62solute\x10\x00\x12\x18\n\x14OffsetFromThreadBase\x10\x01\"$\n\x08Variable\x12\n\n\x02\x65\x61\x18\x01 \x02(\x03\x12\x0c\n\x04name\x18\x02 \x02(\t\",\n\tReference\x12\x0f\n\x07inst_ea\x18\x01 \x02(\x04\x12\x0e\n\x06offset\x18\x02 \x02(\x03\"\xcc\x01\n\x0e\x45xceptionFrame\x12\x0f\n\x07\x66unc_ea\x18\x01 \x02(\x04\x12\x10\n\x08start_ea\x18\x03 \x02(\x04\x12\x0e\n\x06\x65nd_ea\x18\x04 \x02(\x04\x12\r\n\x05lp_ea\x18\x05 \x02(\x04\x12-\n\x06\x61\x63tion\x18\x06 \x02(\x0e\x32\x1d.mcsema.ExceptionFrame.Action\x12\'\n\x05ttype\x18\x07 \x03(\x0b\x32\x18.mcsema.ExternalVariable\" \n\x06\x41\x63tion\x12\x0b\n\x07\x43leanup\x10\x00\x12\t\n\x05\x43\x61tch\x10\x01\"8\n\x0eGlobalVariable\x12\n\n\x02\x65\x61\x18\x01 \x02(\x03\x12\x0c\n\x04name\x18\x02 \x02(\t\x12\x0c\n\x04size\x18\x03 \x02(\x03\"\xe4\x01\n\x07Segment\x12\n\n\x02\x65\x61\x18\x01 \x02(\x03\x12\x0c\n\x04\x64\x61ta\x18\x02 \x02(\x0c\x12\x11\n\tread_only\x18\x03 \x02(\x08\x12\x13\n\x0bis_external\x18\x04 \x02(\x08\x12\x0c\n\x04name\x18\x05 \x02(\t\x12\x15\n\rvariable_name\x18\x06 \x01(\t\x12\x13\n\x0bis_exported\x18\x07 \x02(\x08\x12\x17\n\x0fis_thread_local\x18\x08 \x02(\x08\x12$\n\x05xrefs\x18\t \x03(\x0b\x32\x15.mcsema.DataReference\x12\x1e\n\x04vars\x18\n \x03(\x0b\x32\x10.mcsema.Variable\"\xcd\x02\n\x06Module\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x1f\n\x05\x66uncs\x18\x02 \x03(\x0b\x32\x10.mcsema.Function\x12!\n\x08segments\x18\x03 \x03(\x0b\x32\x0f.mcsema.Segment\x12\x30\n\x0e\x65xternal_funcs\x18\x04 \x03(\x0b\x32\x18.mcsema.ExternalFunction\x12/\n\rexternal_vars\x18\x05 \x03(\x0b\x32\x18.mcsema.ExternalVariable\x12+\n\x0bglobal_vars\x18\x08 \x03(\x0b\x32\x16.mcsema.GlobalVariable\x12\x32\n\x0epreserved_regs\x18\t \x03(\x0b\x32\x1a.mcsema.PreservedRegisters\x12-\n\tdead_regs\x18\n \x03(\x0b\x32\x1a.mcsema.PreservedRegisters*\xa8\x01\n\x11\x43\x61llingConvention\x12\x05\n\x01\x43\x10\x00\x12\x0f\n\x0bX86_StdCall\x10@\x12\x10\n\x0cX86_FastCall\x10\x41\x12\x10\n\x0cX86_ThisCall\x10\x46\x12\x0f\n\x0bX86_64_SysV\x10N\x12\t\n\x05Win64\x10O\x12\x12\n\x0eX86_VectorCall\x10P\x12\x0f\n\x0bX86_RegCall\x10\\\x12\x16\n\x12\x41\x41rch64_VectorCall\x10\x61')

_CALLINGCONVENTION = DESCRIPTOR.enum_types_by_name['CallingConvention']
CallingConvention = enum_type_wrapper.EnumTypeWrapper(_CALLINGCONVENTION)
C = 0
X86_StdCall = 64
X86_FastCall = 65
X86_ThisCall = 70
X86_64_SysV = 78
Win64 = 79
X86_VectorCall = 80
X86_RegCall = 92
AArch64_VectorCall = 97


_PRESERVATIONRANGE = DESCRIPTOR.message_types_by_name['PreservationRange']
_PRESERVEDREGISTERS = DESCRIPTOR.message_types_by_name['PreservedRegisters']
_CODEREFERENCE = DESCRIPTOR.message_types_by_name['CodeReference']
_INSTRUCTION = DESCRIPTOR.message_types_by_name['Instruction']
_BLOCK = DESCRIPTOR.message_types_by_name['Block']
_MEMORYLOCATION = DESCRIPTOR.message_types_by_name['MemoryLocation']
_VALUEDECL = DESCRIPTOR.message_types_by_name['ValueDecl']
_FUNCTIONDECL = DESCRIPTOR.message_types_by_name['FunctionDecl']
_FUNCTION = DESCRIPTOR.message_types_by_name['Function']
_EXTERNALFUNCTION = DESCRIPTOR.message_types_by_name['ExternalFunction']
_EXTERNALVARIABLE = DESCRIPTOR.message_types_by_name['ExternalVariable']
_DATAREFERENCE = DESCRIPTOR.message_types_by_name['DataReference']
_VARIABLE = DESCRIPTOR.message_types_by_name['Variable']
_REFERENCE = DESCRIPTOR.message_types_by_name['Reference']
_EXCEPTIONFRAME = DESCRIPTOR.message_types_by_name['ExceptionFrame']
_GLOBALVARIABLE = DESCRIPTOR.message_types_by_name['GlobalVariable']
_SEGMENT = DESCRIPTOR.message_types_by_name['Segment']
_MODULE = DESCRIPTOR.message_types_by_name['Module']
_CODEREFERENCE_OPERANDTYPE = _CODEREFERENCE.enum_types_by_name['OperandType']
_EXTERNALFUNCTION_CALLINGCONVENTION = _EXTERNALFUNCTION.enum_types_by_name['CallingConvention']
_DATAREFERENCE_TARGETFIXUPKIND = _DATAREFERENCE.enum_types_by_name['TargetFixupKind']
_EXCEPTIONFRAME_ACTION = _EXCEPTIONFRAME.enum_types_by_name['Action']
PreservationRange = _reflection.GeneratedProtocolMessageType('PreservationRange', (_message.Message,), {
  'DESCRIPTOR' : _PRESERVATIONRANGE,
  '__module__' : 'CFG_pb2'
  # @@protoc_insertion_point(class_scope:mcsema.PreservationRange)
  })
_sym_db.RegisterMessage(PreservationRange)

PreservedRegisters = _reflection.GeneratedProtocolMessageType('PreservedRegisters', (_message.Message,), {
  'DESCRIPTOR' : _PRESERVEDREGISTERS,
  '__module__' : 'CFG_pb2'
  # @@protoc_insertion_point(class_scope:mcsema.PreservedRegisters)
  })
_sym_db.RegisterMessage(PreservedRegisters)

CodeReference = _reflection.GeneratedProtocolMessageType('CodeReference', (_message.Message,), {
  'DESCRIPTOR' : _CODEREFERENCE,
  '__module__' : 'CFG_pb2'
  # @@protoc_insertion_point(class_scope:mcsema.CodeReference)
  })
_sym_db.RegisterMessage(CodeReference)

Instruction = _reflection.GeneratedProtocolMessageType('Instruction', (_message.Message,), {
  'DESCRIPTOR' : _INSTRUCTION,
  '__module__' : 'CFG_pb2'
  # @@protoc_insertion_point(class_scope:mcsema.Instruction)
  })
_sym_db.RegisterMessage(Instruction)

Block = _reflection.GeneratedProtocolMessageType('Block', (_message.Message,), {
  'DESCRIPTOR' : _BLOCK,
  '__module__' : 'CFG_pb2'
  # @@protoc_insertion_point(class_scope:mcsema.Block)
  })
_sym_db.RegisterMessage(Block)

MemoryLocation = _reflection.GeneratedProtocolMessageType('MemoryLocation', (_message.Message,), {
  'DESCRIPTOR' : _MEMORYLOCATION,
  '__module__' : 'CFG_pb2'
  # @@protoc_insertion_point(class_scope:mcsema.MemoryLocation)
  })
_sym_db.RegisterMessage(MemoryLocation)

ValueDecl = _reflection.GeneratedProtocolMessageType('ValueDecl', (_message.Message,), {
  'DESCRIPTOR' : _VALUEDECL,
  '__module__' : 'CFG_pb2'
  # @@protoc_insertion_point(class_scope:mcsema.ValueDecl)
  })
_sym_db.RegisterMessage(ValueDecl)

FunctionDecl = _reflection.GeneratedProtocolMessageType('FunctionDecl', (_message.Message,), {
  'DESCRIPTOR' : _FUNCTIONDECL,
  '__module__' : 'CFG_pb2'
  # @@protoc_insertion_point(class_scope:mcsema.FunctionDecl)
  })
_sym_db.RegisterMessage(FunctionDecl)

Function = _reflection.GeneratedProtocolMessageType('Function', (_message.Message,), {
  'DESCRIPTOR' : _FUNCTION,
  '__module__' : 'CFG_pb2'
  # @@protoc_insertion_point(class_scope:mcsema.Function)
  })
_sym_db.RegisterMessage(Function)

ExternalFunction = _reflection.GeneratedProtocolMessageType('ExternalFunction', (_message.Message,), {
  'DESCRIPTOR' : _EXTERNALFUNCTION,
  '__module__' : 'CFG_pb2'
  # @@protoc_insertion_point(class_scope:mcsema.ExternalFunction)
  })
_sym_db.RegisterMessage(ExternalFunction)

ExternalVariable = _reflection.GeneratedProtocolMessageType('ExternalVariable', (_message.Message,), {
  'DESCRIPTOR' : _EXTERNALVARIABLE,
  '__module__' : 'CFG_pb2'
  # @@protoc_insertion_point(class_scope:mcsema.ExternalVariable)
  })
_sym_db.RegisterMessage(ExternalVariable)

DataReference = _reflection.GeneratedProtocolMessageType('DataReference', (_message.Message,), {
  'DESCRIPTOR' : _DATAREFERENCE,
  '__module__' : 'CFG_pb2'
  # @@protoc_insertion_point(class_scope:mcsema.DataReference)
  })
_sym_db.RegisterMessage(DataReference)

Variable = _reflection.GeneratedProtocolMessageType('Variable', (_message.Message,), {
  'DESCRIPTOR' : _VARIABLE,
  '__module__' : 'CFG_pb2'
  # @@protoc_insertion_point(class_scope:mcsema.Variable)
  })
_sym_db.RegisterMessage(Variable)

Reference = _reflection.GeneratedProtocolMessageType('Reference', (_message.Message,), {
  'DESCRIPTOR' : _REFERENCE,
  '__module__' : 'CFG_pb2'
  # @@protoc_insertion_point(class_scope:mcsema.Reference)
  })
_sym_db.RegisterMessage(Reference)

ExceptionFrame = _reflection.GeneratedProtocolMessageType('ExceptionFrame', (_message.Message,), {
  'DESCRIPTOR' : _EXCEPTIONFRAME,
  '__module__' : 'CFG_pb2'
  # @@protoc_insertion_point(class_scope:mcsema.ExceptionFrame)
  })
_sym_db.RegisterMessage(ExceptionFrame)

GlobalVariable = _reflection.GeneratedProtocolMessageType('GlobalVariable', (_message.Message,), {
  'DESCRIPTOR' : _GLOBALVARIABLE,
  '__module__' : 'CFG_pb2'
  # @@protoc_insertion_point(class_scope:mcsema.GlobalVariable)
  })
_sym_db.RegisterMessage(GlobalVariable)

Segment = _reflection.GeneratedProtocolMessageType('Segment', (_message.Message,), {
  'DESCRIPTOR' : _SEGMENT,
  '__module__' : 'CFG_pb2'
  # @@protoc_insertion_point(class_scope:mcsema.Segment)
  })
_sym_db.RegisterMessage(Segment)

Module = _reflection.GeneratedProtocolMessageType('Module', (_message.Message,), {
  'DESCRIPTOR' : _MODULE,
  '__module__' : 'CFG_pb2'
  # @@protoc_insertion_point(class_scope:mcsema.Module)
  })
_sym_db.RegisterMessage(Module)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _CALLINGCONVENTION._serialized_start=2696
  _CALLINGCONVENTION._serialized_end=2864
  _PRESERVATIONRANGE._serialized_start=21
  _PRESERVATIONRANGE._serialized_end=74
  _PRESERVEDREGISTERS._serialized_start=76
  _PRESERVEDREGISTERS._serialized_end=158
  _CODEREFERENCE._serialized_start=161
  _CODEREFERENCE._serialized_end=387
  _CODEREFERENCE_OPERANDTYPE._serialized_start=261
  _CODEREFERENCE_OPERANDTYPE._serialized_end=387
  _INSTRUCTION._serialized_start=389
  _INSTRUCTION._serialized_end=467
  _BLOCK._serialized_start=469
  _BLOCK._serialized_end=585
  _MEMORYLOCATION._serialized_start=587
  _MEMORYLOCATION._serialized_end=637
  _VALUEDECL._serialized_start=639
  _VALUEDECL._serialized_end=736
  _FUNCTIONDECL._serialized_start=739
  _FUNCTIONDECL._serialized_end=1023
  _FUNCTION._serialized_start=1026
  _FUNCTION._serialized_end=1194
  _EXTERNALFUNCTION._serialized_start=1197
  _EXTERNALFUNCTION._serialized_end=1486
  _EXTERNALFUNCTION_CALLINGCONVENTION._serialized_start=1415
  _EXTERNALFUNCTION_CALLINGCONVENTION._serialized_end=1486
  _EXTERNALVARIABLE._serialized_start=1488
  _EXTERNALVARIABLE._serialized_end=1588
  _DATAREFERENCE._serialized_start=1591
  _DATAREFERENCE._serialized_end=1777
  _DATAREFERENCE_TARGETFIXUPKIND._serialized_start=1720
  _DATAREFERENCE_TARGETFIXUPKIND._serialized_end=1777
  _VARIABLE._serialized_start=1779
  _VARIABLE._serialized_end=1815
  _REFERENCE._serialized_start=1817
  _REFERENCE._serialized_end=1861
  _EXCEPTIONFRAME._serialized_start=1864
  _EXCEPTIONFRAME._serialized_end=2068
  _EXCEPTIONFRAME_ACTION._serialized_start=2036
  _EXCEPTIONFRAME_ACTION._serialized_end=2068
  _GLOBALVARIABLE._serialized_start=2070
  _GLOBALVARIABLE._serialized_end=2126
  _SEGMENT._serialized_start=2129
  _SEGMENT._serialized_end=2357
  _MODULE._serialized_start=2360
  _MODULE._serialized_end=2693
# @@protoc_insertion_point(module_scope)
